<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example.ecosim</groupId>
  <artifactId>ecosim</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>ecosim</name>

  <!-- Java と JavaFX のバージョンをプロパティで管理 -->
  <properties>
    <java.version>17</java.version>
    <javafx.version>20</javafx.version>
  </properties>

  <dependencies>
    <!-- テスト用 JUnit 依存 -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <!-- JavaFX Controls -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>

    <!-- JavaFX FXML (必要なら) -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- ① JavaFX 実行用プラグイン -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.8</version>
        <executions>
          <execution>
            <id>run-javafx</id>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <mainClass>com.example.ecosim.view.SimulatorGUI</mainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- (A) まず maven-jar-plugin で手動マニフェストを埋め込む -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <archive>
            <!-- resources/META-INF/MANIFEST.MF をそのまま manifest として使う -->
            <manifestFile>${project.basedir}/src/main/resources/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>

      <!-- (B) Fat-JAR（uber-jar）を作成 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- 元 JAR を original-*.jar に退避させない -->
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <transformers>
                <!-- マージした JAR の manifest をそのまま使う -->
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer" />
                <!-- サービスファイル(META-INF/services)もマージ -->
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- (C) もし run.bat 用などでルートにコピーしたいならこのまま残す -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-jar-to-root</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>ecosim-1.0-SNAPSHOT.jar</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>